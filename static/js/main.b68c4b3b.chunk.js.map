{"version":3,"sources":["Context.js","components/Contacts/Contact.js","components/Contacts/Contacts.js","components/Layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/Layout/TextInputGroup.js","components/Contacts/AddContact.js","components/Contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","Object","objectSpread","concat","toConsumableArray","map","Provider","dispatch","_this","setState","console","log","axios","get","response","this","data","react_default","a","createElement","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","then","_this2","_this$props$contact","name","email","phone","showContactInfoElement","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","Contacts_Contact","key","Header","href","branding","defaultProps","About","NotFound","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","event","defineProperty","target","onSubmit","preventDefault","_this$state","newContact","post","history","push","_this$state2","Layout_TextInputGroup","EditContact","_callee","updatedContact","regenerator_default","wrap","_context","prev","next","abrupt","match","params","put","sent","stop","res","App","Context_Provider","basename","process","Layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b68c4b3b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport  axios  from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n       case 'DELETE_CONTACT':\r\n            return {\r\n               // ...state,\r\n               contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            };\r\n       case 'ADD_CONTACT':\r\n            return {\r\n               ...state,\r\n               contacts: [action.payload, ...state.contacts]\r\n            };\r\n       case 'UPDATE_CONTACT':\r\n            return {\r\n               ...state,\r\n               contacts: state.contacts.map(\r\n                  contact => \r\n                     contact.id === action.payload.id ? ( contact = action.payload ) : contact\r\n               )\r\n            };\r\n\r\n       default: return state;     \r\n    }\r\n};\r\n\r\nexport default class Provider extends Component {\r\n   state = {\r\n      contacts: [\r\n         // {\r\n         //    id: 1,\r\n         //    name: 'Amarjit Kumar',\r\n         //    email: 'amar@gmail.com',\r\n         //    phone: '555-555-5555'\r\n         // },\r\n         // {\r\n         //    id: 2,\r\n         //    name: 'Ratnesh Kumar',\r\n         //    email: 'ratnesh@gmail.com',\r\n         //    phone: '111-111-1111'\r\n         // },\r\n         // {\r\n         //    id: 3,\r\n         //    name: 'Rahul Verma',\r\n         //    email: 'rahul@gmail.com',\r\n         //    phone: '777-777-7777'\r\n         // }\r\n      ],\r\n      dispatch: action => {\r\n         this.setState(state => reducer(state, action))\r\n      }\r\n   };\r\n\r\n   // using Async/Await\r\n   async componentDidMount() {\r\n      console.log('componentDidMount is called...!');\r\n      const response = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n     this.setState({ contacts: response.data });\r\n   }\r\n\r\n   // componentDidMount() {\r\n   //    console.log('componentDidMount is called...!');\r\n   //    axios.get('https://jsonplaceholder.typicode.com/users')\r\n   //     .then(response => this.setState({ contacts: response.data }))\r\n   // }\r\n\r\n   render() {\r\n      return (\r\n         <Context.Provider value={this.state}>\r\n            { this.props.children }\r\n         </Context.Provider>\r\n      )\r\n   }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nimport { Consumer } from '../../Context';\r\n\r\n\r\nclass Contact extends Component {\r\n \r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onShowClick = (e) => {\r\n    this.setState({showContactInfo: ! this.state.showContactInfo\r\n      })\r\n  };\r\n\r\n  onDeleteClick = (id, dispatch, e) => {\r\n    axios\r\n      .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n      .then(response => dispatch({type: 'DELETE_CONTACT', payload: id}));\r\n    \r\n  };\r\n\r\n  render() {\r\n    console.log('render method called...')\r\n    //  const {name, email, phone} = this.props;\r\n    const { id, name, email, phone } = this.props.contact;\r\n\r\n    const showContactInfoElement = ( \r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              );\r\n\r\n    return (\r\n      <Consumer>\r\n        {\r\n           value => {\r\n             const { dispatch } = value;\r\n              return (\r\n                <div className=\"card card-body mb-3\">\r\n                <h4>\r\n                    {name}{' '} \r\n                    <i onClick={this.onShowClick} \r\n                       className=\"fas fa-sort-down\" \r\n                       style={{ cursor: 'pointer'}} />\r\n                    <i className=\"fas fa-times\"\r\n                       style={{ cursor: 'pointer', float: 'right', color: 'red'}}\r\n                       onClick={this.onDeleteClick.bind(this, id, dispatch)} />\r\n                    <Link to={`/contact/edit/${id}`}>\r\n                    <i className=\"fas fa-pencil-alt\"\r\n                       style={{ cursor: 'pointer', float: 'right', color: 'black', marginRight: '1rem'}} />\r\n                    </Link>\r\n                </h4>\r\n                {\r\n                    this.state.showContactInfo ? showContactInfoElement : null\r\n                }\r\n              </div>\r\n              );\r\n           }\r\n        }\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\n// Contact.propTypes ={\r\n//   name: PropTypes.string.isRequired,\r\n//   email: PropTypes.string.isRequired,\r\n//   phone: PropTypes.string.isRequired,\r\n// };\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  // deleteClickHandler: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from '../Contacts/Contact';\r\n\r\nimport { Consumer } from '../../Context'\r\n\r\n class Contacts extends Component {\r\n   render() {\r\n\r\n      return (\r\n\r\n         <Consumer>\r\n            { value => {\r\n               const { contacts } = value;\r\n               return (\r\n                 <React.Fragment>\r\n                    <h1 className=\"display4 mb-2\"><span className=\"text-danger\">Conatct</span> List</h1>\r\n                   { contacts.map( contact => <Contact key={contact.id} contact={contact} /> ) } \r\n                 </React.Fragment>\r\n               );\r\n             }\r\n            }\r\n         </Consumer>\r\n         \r\n      );\r\n   } \r\n}\r\n\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Header = (props) => {\r\n   // return (\r\n   //    <div>\r\n   //      <h1 style={headingStyle}>{props.branding}</h1> \r\n   //    </div>\r\n   // )\r\n\r\n   return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n         <div className=\"container\">\r\n            <a href=\"/\" className=\"navbar-brand\">{props.branding}</a>\r\n            <div>\r\n               <ul className=\"navbar-nav mr-auto\">\r\n                  <li className=\"nav-item\">\r\n                     <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i> Home</Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                     <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i>Add</Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                     <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i> About</Link>\r\n                  </li>\r\n               </ul>\r\n            </div>\r\n         </div>\r\n      </nav>\r\n   );\r\n\r\n\r\n};\r\n\r\nHeader.defaultProps = {\r\n   branding:'My App',\r\n};\r\n\r\nHeader.propTypes = {\r\n   branding: PropTypes.string.isRequired\r\n};\r\n\r\n// const headingStyle = {\r\n//    color: 'green',\r\n//    fontSize: '50px'\r\n// };\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n   return (\r\n      <div>\r\n         <h1 className=\"display-4\">About Contact Manager</h1>\r\n         <p className=\"lead\">Simple app to manage contacts</p>\r\n         <p className=\"text-secondary\">Version 1.0.0</p>\r\n      </div>\r\n   )\r\n}\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n   return (\r\n      <div>\r\n         <h1 className=\"display-4\"><span className=\"text-danger\">404</span>  Page Not Found</h1>\r\n         <p className=\"lead\">Sorry, that page does not exist</p>\r\n      </div>\r\n   );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n\r\nconst TextInputGroup = ({label, name, value, placeholder, type, onChange, error}) => {\r\n   return (\r\n      <div className=\"form-group\">\r\n         <label htmlFor={name}>{label}</label>\r\n         <input type={type} \r\n               name={name}\r\n               // className=\"is-invalid form-control form-control-lg\"\r\n               className={classnames('form-control form-control-lg', { 'is-invalid': error })}\r\n               placeholder={placeholder} value={value} onChange={onChange} />\r\n         {error && <div className=\"invalid-feedback\">{error}</div> }\r\n         {/* <div className=\"invalid-feedback\">This is wrong</div> */}\r\n   </div>\r\n   );\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n   name: PropTypes.string.isRequired,\r\n   label: PropTypes.string.isRequired,\r\n   value: PropTypes.string.isRequired,\r\n   type: PropTypes.string.isRequired,\r\n   placeholder: PropTypes.string.isRequired,\r\n   onChange: PropTypes.func.isRequired,\r\n   error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps ={\r\n   type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nimport { Consumer } from '../../Context';\r\nimport TextInputGroup from '../Layout/TextInputGroup';\r\n\r\nclass AddContact extends Component {\r\n   state = {\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {},\r\n   };\r\n\r\n\r\n   onChange = (event) => this.setState({ [event.target.name]: event.target.value });\r\n\r\n   onSubmit = (dispatch, event) => {\r\n      \r\n      event.preventDefault();\r\n         \r\n      const { name, email, phone } = this.state;\r\n\r\n      // Check for errors\r\n      if (name === '') {\r\n         this.setState({errors: { name: 'Name is required'}});\r\n         return;\r\n      };\r\n      if (email === '') {\r\n         this.setState({errors: { email: 'Email is required'}});\r\n         return;\r\n      };\r\n      if (phone === '') {\r\n         this.setState({errors: { phone: 'Phone is required'}});\r\n         return;\r\n      };\r\n\r\n      // console.log(this.state);\r\n\r\n      const newContact = {\r\n         // id: uuid(),\r\n         name: name,\r\n         email: email,\r\n         phone: phone\r\n      };\r\n\r\n      axios\r\n         .post(`https://jsonplaceholder.typicode.com/users`, newContact)\r\n         .then(response => dispatch({type: 'ADD_CONTACT', payload: response.data}));\r\n\r\n      // Clear the state\r\n      this.setState({ name: '', email: '', phone: '', errors: {} });\r\n      // After submitting the form, re-directing to Home page\r\n      this.props.history.push('/');\r\n   }\r\n\r\n   render() {\r\n\r\n      const { name, email, phone, errors} = this.state;\r\n\r\n      return (\r\n         <Consumer>\r\n            { value => {\r\n                const { dispatch } = value;\r\n                \r\n               return (\r\n                  <div className=\"card mb-3\">\r\n                  <div className=\"card-header\">Add Contact</div>\r\n                  <div className=\"card-body\">\r\n                     <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                        <TextInputGroup name=\"name\" label=\"Name\" value={name} placeholder=\"Enter Name...\"                onChange={this.onChange}  error={errors.name} />\r\n                        <TextInputGroup name=\"email\" label=\"Email\" value={email} placeholder=\"Enter Email...\"                 type=\"email\" onChange={this.onChange} error={errors.email} />\r\n                        <TextInputGroup name=\"phone\" label=\"Phone\" value={phone} placeholder=\"Enter Phone...\"                onChange={this.onChange}  error={errors.phone} />\r\n                        <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\"/>\r\n                     </form>\r\n                  </div>\r\n               </div>\r\n               );\r\n            }}\r\n         </Consumer>\r\n      );\r\n   }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\nimport { Consumer } from '../../Context';\r\nimport TextInputGroup from '../Layout/TextInputGroup';\r\n\r\nclass EditContact extends Component {\r\n   state = {\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {},\r\n   };\r\n\r\n   async componentDidMount() {\r\n      const { id } = this.props.match.params;\r\n      const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      const contact = res.data;\r\n      this.setState({ name: contact.name, email: contact.email, phone: contact.phone });\r\n   }\r\n\r\n\r\n   onChange = (event) => this.setState({ [event.target.name]: event.target.value });\r\n\r\n   onSubmit = async (dispatch, event) => {\r\n      \r\n      event.preventDefault();\r\n         \r\n      const { name, email, phone } = this.state;\r\n\r\n      // Check for errors\r\n      if (name === '') {\r\n         this.setState({errors: { name: 'Name is required'}});\r\n         return;\r\n      };\r\n      if (email === '') {\r\n         this.setState({errors: { email: 'Email is required'}});\r\n         return;\r\n      };\r\n      if (phone === '') {\r\n         this.setState({errors: { phone: 'Phone is required'}});\r\n         return;\r\n      };\r\n\r\n      // console.log(this.state);\r\n\r\n      const updatedContact =  { name: name, email: email, phone: phone};\r\n      const { id } = this.props.match.params;\r\n\r\n      const response = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updatedContact);\r\n      dispatch({type: 'UPDATE_CONTACT', payload: response.data});\r\n\r\n\r\n      // Clear the state\r\n      this.setState({ name: '', email: '', phone: '', errors: {} });\r\n\r\n      // After submitting the form, re-directing to Home page\r\n      this.props.history.push('/');\r\n   }\r\n\r\n   render() {\r\n\r\n      const { name, email, phone, errors} = this.state;\r\n\r\n      return (\r\n         <Consumer>\r\n            { value => {\r\n                const { dispatch } = value;\r\n                \r\n               return (\r\n                  <div className=\"card mb-3\">\r\n                  <div className=\"card-header\">Edit Contact</div>\r\n                  <div className=\"card-body\">\r\n                     <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                        <TextInputGroup name=\"name\" label=\"Name\" value={name} placeholder=\"Enter Name...\"                onChange={this.onChange}  error={errors.name} />\r\n                        <TextInputGroup name=\"email\" label=\"Email\" value={email} placeholder=\"Enter Email...\"                 type=\"email\" onChange={this.onChange} error={errors.email} />\r\n                        <TextInputGroup name=\"phone\" label=\"Phone\" value={phone} placeholder=\"Enter Phone...\"                onChange={this.onChange}  error={errors.phone} />\r\n                        <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\"/>\r\n                     </form>\r\n                  </div>\r\n               </div>\r\n               );\r\n            }}\r\n         </Consumer>\r\n      );\r\n   }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n// import Contact from \"./components/Contact\";\nimport Contacts from './components/Contacts/Contacts';\nimport Header from \"./components/Layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from './components/pages/NotFound';\nimport AddContact from './components/Contacts/AddContact';\nimport EditContact from './components/Contacts/EditContact';\n\n\nimport Provider from './Context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n        <Provider>\n          <Router basename={process.env.PUBLIC_URL}>\n           <div className=\"App\">\n              <Header branding=\"Contact Manager\" />\n              <div className=\"container\">\n                {/* <Contact name=\"Amarjit Singh\" email=\"amar@gmail.com\" phone=\"555-555-5555\"/>\n                <Contact name=\"Ratnesh Singh\" email=\"ratan@gmail.com\" phone=\"333-333-3333\"/> */}\n                <Switch>\n                  <Route exact path=\"/\" component={Contacts} />\n                  <Route exact path=\"/contact/add\" component={AddContact} />\n                  <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                  <Route exact path=\"/about\" component={About} />\n                  <Route component={ NotFound } />\n                </Switch>\n              </div>\n            </div>\n          </Router>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}